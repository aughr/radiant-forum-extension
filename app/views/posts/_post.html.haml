- post ||= @post
- first ||= false
- with_topic ||= false
- with_context ||= false
- without_author ||= false
- with_conversation ||= false
- preview ||= false

%div{:id => post.dom_id, :class => first ? 'post first' : 'post reply'} 
  .speaker
    = link_to gravatar_for(post.reader, {:size => 40}, {:alt => post.reader.name, :class => 'gravatar offset', :width => '40', :height => '40'}), forum_topic_url(post.topic.forum, post.topic, :anchor => "post_#{post.id}")

  .post_wrapper
    .post_header

      %p.context
        - if with_context
          - if post.first?
            = t('new_topic')
            = link_to post.topic.name, forum_topic_url(post.topic.forum, post.topic)
            = t('started_on', :date => friendly_date(post.created_at))
            = t('in_category')
            = link_to post.topic.forum.name, forum_url(post.topic.forum)
          - else
            = t('a_reply_to')
            = link_to post.topic.name, forum_topic_url(post.topic.forum, post.topic)
            = t('posted_on', :date => friendly_date(post.created_at))
          
        - unless without_author
          = t('by')
          = link_to post.reader.name, reader_url(post.reader), :class => 'person'
        
        - if post.editable_by?(current_reader)
          %br
          %span.still_editable
            - if post.editable_interval
              = t('time_remaining_to_edit', :time => distance_of_time_in_words(post.still_editable_for))
            = link_to t('edit_your_post'), edit_topic_post_url(post.topic, post), :class => 'edit_post', :id => "revise_post_#{post.id}"
        - elsif admin?
          = link_to t("edit_minimal"), edit_topic_post_url(post.topic, post), :class => 'edit_post', :id => "revise_post_#{post.id}"
          = link_to t("remove_minimal"), topic_post_url(post.topic, post), :method => 'delete', :class => 'delete_post', :id => "delete_post_#{post.id}", :title => "remove post", :confirm => "Are you sure you want to delete this message?"
    
    .post_body
      - if post.frozen?
        %p 
          = t('post_removed')
      - elsif preview
        = truncate_and_textilize(post.body, 100)
      - else
        = clean_textilize(post.body)

      - if Radiant::Config['forum.allow_attachments?'] &&  post.attachments.any?
        .post_attachments
          %h4 
            = t('attached') + ':'
          - post.attachments.images.each do |att|
            = link_to image_tag(att.thumbnail), att.file.url, :class => :thumbnail
          - if post.attachments.non_images.any?
            %ul.attachments
              - post.attachments.non_images.each do |att|
                %li
                  = link_to att.filename, att.file.url, :class => "attachment #{att.extension}"

